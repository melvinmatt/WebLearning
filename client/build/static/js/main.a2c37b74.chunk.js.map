{"version":3,"sources":["components/common/spinner.gif","actions/types.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/profileReducer.js","reducers/postReducer.js","reducers/index.js","store.js","utils/setAuthToken.js","actions/authActions.js","actions/profileActions.js","components/common/PrivateRoute.js","components/layout/Navbar.js","components/layout/Landing.js","components/common/TextFieldGroup.js","components/auth/Register.js","components/auth/Login.js","components/layout/Footer.js","components/common/Spinner.js","components/dashboard/ProfileActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/common/TextAreaFieldGroup.js","components/common/InputGroup.js","components/common/SelectListGroup.js","components/create-profile/CreateProfile.js","components/edit-profile/EditProfile.js","components/add-credentials/AddExperience.js","components/add-credentials/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileHeader.js","components/profile/ProfileAbout.js","components/profile/ProfileCreds.js","components/profile/ProfileGithub.js","components/profile/Profile.js","actions/postActions.js","components/posts/PostForm.js","components/posts/PostItem.js","components/posts/PostFeed.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/CommentFeed.js","components/post/Post.js","components/not-found/NotFound.js","App.js","index.js"],"names":["module","exports","GET_ERRORS","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","profile","profiles","loading","posts","post","combineReducers","auth","state","action","type","payload","errors","filter","_id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","getCurrentProfile","setProfileLoading","get","then","res","data","catch","err","createProfile","profileData","history","push","response","clearProfile","connect","Component","component","rest","render","props","to","Navbar","e","preventDefault","this","authLinks","className","href","onClick","onLogoutClick","bind","src","avatar","alt","name","style","width","marginRight","title","guestLinks","data-toggle","data-target","id","Landing","TextFieldGroup","placeholder","error","label","info","onChange","disabled","classnames","defaultProps","Register","email","password","password2","onSubmit","nextProps","setState","target","newUser","registerUser","noValidate","userData","withRouter","Login","loginUser","setItem","jwt_decode","Footer","Date","getFullYear","spinner","margin","display","ProfileActions","role","Experience","deleteExperience","experience","map","exp","key","company","format","from","onDeleteClick","delete","Education","deleteEducation","education","edu","school","degree","Dashboard","deleteAccount","dashboardContent","Spinner","handle","marginBottom","confirm","TextAreaFieldGroup","InputGroup","icon","SelectListGroup","selectOptions","options","option","CreateProfile","displaySocialInputs","website","location","status","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","socialInputs","prevState","EditProfile","skillsCSV","join","social","AddExperience","current","description","onCheck","expData","addExperience","checked","htmlFor","AddEducation","fieldofstudy","eduData","addEducation","ProfileItem","slice","skill","index","Profiles","getProfiles","profileItems","ProfileHeader","rel","ProfileAbout","firstName","split","ProfileCreds","expItems","eduItems","ProfileGithub","clientId","clientSecret","count","sort","repos","myRef","React","createRef","username","fetch","json","console","log","repoItems","repo","html_url","stargazers_count","watchers_count","forks_count","ref","Profile","match","params","getProfileByHandle","profileContent","getPosts","setPostLoading","clearErrors","PostForm","text","newProps","newPost","addPost","postData","PostItem","deletePost","addLike","removeLike","likes","like","showActions","onLikeClick","findUserLike","onUnlikeClick","PostFeed","Posts","postContent","CommentForm","postId","newComment","addComment","commentData","CommentItem","commentId","deleteComment","comment","CommentFeed","comments","Post","getPost","jwtToken","currentTime","now","App","exact","path","NotFound","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2c37b74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ec93a7b3.gif\";","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\r\nexport const PROFILE_NOT_FOUND = \"PROFILE_NOT_FOUND\";\r\nexport const CLEAR_CURRENT_PROFILE = \"CLEAR_CURRENT_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const POST_LOADING = \"POST_LOADING\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","const isEmpty = (value) =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\nimport isEmpty from \"../validation/is-empty\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CLEAR_ERRORS, GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case PROFILE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_CURRENT_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  POST_LOADING,\r\n  DELETE_POST,\r\n  GET_POST,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: {},\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false,\r\n      };\r\n    case POST_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport postReducer from \"./postReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  profile: profileReducer,\r\n  post: postReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/user/register\", userData)\r\n    .then((res) => history.push(\"/login\"))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get User Token\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/user/login\", userData)\r\n    .then((res) => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to ls\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded,\r\n  };\r\n};\r\n\r\n// log user out\r\nexport const logoutUser = () => (dispatch) => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  GET_ERRORS,\r\n  CLEAR_CURRENT_PROFILE,\r\n  SET_CURRENT_USER,\r\n} from \"./types\";\r\n\r\n// Get current profile\r\nexport const getCurrentProfile = () => (dispatch) => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"/api/profile\")\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {},\r\n      })\r\n    );\r\n};\r\n\r\n// Get profile by handle\r\nexport const getProfileByHandle = (handle) => (dispatch) => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(`/api/profile/handle/${handle}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: null,\r\n      })\r\n    );\r\n};\r\n\r\n// Create Profile\r\nexport const createProfile = (profileData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"api/profile\", profileData)\r\n    .then((res) => history.push(\"/dashboard\"))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (expData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/profile/experience\", expData)\r\n    .then((res) => history.push(\"/dashboard\"))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Add education\r\nexport const addEducation = (eduData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/profile/education\", eduData)\r\n    .then((res) => history.push(\"/dashboard\"))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Delete Experience\r\nexport const deleteExperience = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/profile/experience/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Delete Education\r\nexport const deleteEducation = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/profile/education/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => (dispatch) => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"/api/profile/all\")\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: null,\r\n      })\r\n    );\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => (dispatch) => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    axios\r\n      .delete(\"api/profile\")\r\n      .then((res) =>\r\n        dispatch({\r\n          type: SET_CURRENT_USER,\r\n          payload: {},\r\n        })\r\n      )\r\n      .catch((err) =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data,\r\n        })\r\n      );\r\n  }\r\n};\r\n\r\n// Profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING,\r\n  };\r\n};\r\n\r\n// Clear Profile\r\nexport const clearProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport { clearProfile } from \"../../actions/profileActions\";\r\n\r\nclass Navbar extends Component {\r\n  onLogoutClick(e) {\r\n    e.preventDefault();\r\n    this.props.clearProfile();\r\n    this.props.logoutUser();\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = (\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/feed\">\r\n            Post Feed\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/dashboard\">\r\n            DashBoard\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"/\"\r\n            onClick={this.onLogoutClick.bind(this)}\r\n            className=\"nav-link\"\r\n          >\r\n            <img\r\n              className=\"rounded-circle\"\r\n              src={user.avatar}\r\n              alt={user.name}\r\n              style={{ width: \"25px\", marginRight: \"5px\" }}\r\n              title=\"You must have a Gravatar connected to your email to display an image\"\r\n            />{\" \"}\r\n            Logout\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    const guestLinks = (\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/register\">\r\n            Sign Up\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            WebLearning Connect\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/profiles\">\r\n                  {\" \"}\r\n                  Learners\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            {isAuthenticated ? authLinks : guestLinks}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser, clearProfile })(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Developer Connector</h1>\r\n                <p className=\"lead\">\r\n                  {\" \"}\r\n                  Create a developer profile/portfolio, share posts and get help\r\n                  from other developers\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string,\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">\r\n                Create your DevConnector account\r\n              </p>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Name\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                  info=\"This site uses Gravatar so if you want a profile image, use\r\n                  a Gravatar email\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"password2\"\r\n                  type=\"password\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange}\r\n                  error={errors.password2}\r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <p className=\"lead text-center\">\r\n                Sign in to your DevConnector account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n            Copyright &copy; {new Date().getFullYear()} WebLearning\r\n        </footer>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProfileActions = () => {\r\n  return (\r\n    <div className=\"btn-group mb-4\" role=\"group\">\r\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-user-circle text-info mr-1\"></i> Edit Profile\r\n      </Link>\r\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n        <i className=\"fab fa-black-tie text-info mr-1\"></i>\r\n        Add Experience\r\n      </Link>\r\n      <Link to=\"/add-education\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-graduation-cap text-info mr-1\"></i>\r\n        Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileActions;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteExperience } from \"../../actions/profileActions\";\r\n\r\nclass Experience extends Component {\r\n  onDeleteClick(id) {\r\n    this.props.deleteExperience(id);\r\n  }\r\n\r\n  render() {\r\n    const experience = this.props.experience.map((exp) => (\r\n      <tr key={exp._id}>\r\n        <td>{exp.company}</td>\r\n        <td>{exp.title}</td>\r\n        <td>\r\n          <Moment format=\"DD/MM/YYYY\">{exp.from}</Moment> -\r\n          {exp.to == null ? (\r\n            \" Now\"\r\n          ) : (\r\n            <Moment format=\"DD/MM/YYYY\">{exp.to}</Moment>\r\n          )}\r\n        </td>\r\n        <td>\r\n          <button\r\n            onClick={this.onDeleteClick.bind(this, exp._id)}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h4 className=\"mb-4\">Experience Credentials</h4>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Company</th>\r\n              <th>Title</th>\r\n              <th>Years</th>\r\n              <th></th>\r\n            </tr>\r\n            {experience}\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExperience.propTypes = {\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteEducation } from \"../../actions/profileActions\";\r\n\r\nclass Education extends Component {\r\n  onDeleteClick(id) {\r\n    this.props.deleteEducation(id);\r\n  }\r\n\r\n  render() {\r\n    const education = this.props.education.map((edu) => (\r\n      <tr key={edu._id}>\r\n        <td>{edu.school}</td>\r\n        <td>{edu.degree}</td>\r\n        <td>\r\n          <Moment format=\"DD/MM/YYYY\">{edu.from}</Moment> -\r\n          {edu.to == null ? (\r\n            \" Now\"\r\n          ) : (\r\n            <Moment format=\"DD/MM/YYYY\">{edu.to}</Moment>\r\n          )}\r\n        </td>\r\n        <td>\r\n          <button\r\n            onClick={this.onDeleteClick.bind(this, edu._id)}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h4 className=\"mb-4\">Education Credentials</h4>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>School</th>\r\n              <th>Degree</th>\r\n              <th>Years</th>\r\n              <th></th>\r\n            </tr>\r\n            {education}\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEducation.propTypes = {\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profileActions\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileActions from \"./ProfileActions\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  onDeleteClick(e) {\r\n    this.props.deleteAccount();\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    const { profile, loading } = this.props.profile;\r\n\r\n    let dashboardContent;\r\n\r\n    if (profile === null || loading) {\r\n      dashboardContent = <Spinner />;\r\n    } else {\r\n      // Check if logged in user has profile data\r\n      if (Object.keys(profile).length > 0) {\r\n        dashboardContent = (\r\n          <div>\r\n            <p className=\"lead text-muted\">\r\n              Welcome <Link to={`/profile/${profile.handle}`}>{user.name}</Link>{\" \"}\r\n            </p>\r\n            <ProfileActions />\r\n            <Experience experience={profile.experience} />\r\n            <Education education={profile.education} />\r\n            <div style={{ marginBottom: \"60px\" }} />\r\n            <button\r\n              onClick={this.onDeleteClick.bind(this)}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              Delete My Account\r\n            </button>\r\n          </div>\r\n        );\r\n      } else {\r\n        // User is logged in but has no profile\r\n        dashboardContent = (\r\n          <div>\r\n            <p className=\"lead text-muted\">Welcome {user.name}</p>\r\n            <p>You have not set up a profile, please add info</p>\r\n            <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\r\n              Create Profile\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4\">Dashboard</h1>\r\n              {dashboardContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  info,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  icon,\r\n  type,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-pretend\">\r\n        <span className=\"input-group-text\">\r\n          <i className={icon} />\r\n        </span>\r\n      </div>\r\n      <input\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default InputGroup;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectListGroup = ({ name, value, error, info, onChange, options }) => {\r\n  const selectOptions = options.map((option) => (\r\n    <option key={option.label} value={option.value}>\r\n      {option.label}\r\n    </option>\r\n  ));\r\n  return (\r\n    <div className=\"form-group\">\r\n      <select\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        {selectOptions}\r\n      </select>\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectListGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default SelectListGroup;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport InputGroup from \"../common/InputGroup\";\r\nimport SelectListGroup from \"../common/SelectListGroup\";\r\nimport { createProfile } from \"../../actions/profileActions\";\r\n\r\nclass CreateProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      handle: \"\",\r\n      company: \"\",\r\n      website: \"\",\r\n      location: \"\",\r\n      status: \"\",\r\n      skills: \"\",\r\n      githubusername: \"\",\r\n      bio: \"\",\r\n      twitter: \"\",\r\n      facebook: \"\",\r\n      linkedin: \"\",\r\n      youtube: \"\",\r\n      instagram: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, state) {\r\n    if (nextProps.errors) {\r\n      return { errors: nextProps.errors };\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      handle: this.state.handle,\r\n      company: this.state.company,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n      status: this.state.status,\r\n      skills: this.state.skills,\r\n      githubusername: this.state.githubusername,\r\n      bio: this.state.bio,\r\n      twitter: this.state.twitter,\r\n      facebook: this.state.facebook,\r\n      linkedin: this.state.linkedin,\r\n      youtube: this.state.youtube,\r\n      instagram: this.state.instagram,\r\n    };\r\n\r\n    this.props.createProfile(profileData, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter Profile URL\"\r\n            name=\"twitter\"\r\n            icon=\"fab fa-twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            error={errors.twitter}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Facebook Page URL\"\r\n            name=\"facebook\"\r\n            icon=\"fab fa-facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            error={errors.facebook}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"LinkedIn Profile URL\"\r\n            name=\"linkedin\"\r\n            icon=\"fab fa-linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            error={errors.linkedin}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Youtube Channel URL\"\r\n            name=\"youtube\"\r\n            icon=\"fab fa-youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            error={errors.youtube}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Instagram Page URL\"\r\n            name=\"instagram\"\r\n            icon=\"fab fa-instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            error={errors.instagram}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Select options for status\r\n    const options = [\r\n      { label: \"* Select Professional Status\", value: 0 },\r\n      { label: \"Developer\", value: \"Developer\" },\r\n      { label: \"Junior Developer\", value: \"Junior Developer\" },\r\n      { label: \"Senior Developer\", value: \"Senior Developer\" },\r\n      { label: \"Manager\", value: \"Manager\" },\r\n      { label: \"Student or Learning\", value: \"Student or Learning\" },\r\n      { label: \"Instructor or Teacher\", value: \"Instructor or Teacher\" },\r\n      { label: \"Intern\", value: \"Intern\" },\r\n      { label: \"Other\", value: \"Other\" },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"create-profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Create Your Profile</h1>\r\n              <p className=\"lead text-center\">\r\n                Let's get some information to make your profile stand out\r\n              </p>\r\n              <small className=\"d-block pb-3\">* = required fields</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Profile Handle\"\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  error={errors.handle}\r\n                  info=\"A unique handle for your profile URL. Your fullname, company name, nickname\"\r\n                />\r\n                <SelectListGroup\r\n                  placeholder=\"Status\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onChange}\r\n                  options={options}\r\n                  error={errors.status}\r\n                  info=\"Give us an idea of where you are at in your career\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                  info=\"Could be your own company or one you work for\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Website\"\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  error={errors.website}\r\n                  info=\"Could be your own website or a company one\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                  info=\"City or city & state suggested (eg. Bangalore, KA)\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Skills\"\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  error={errors.skills}\r\n                  info=\"Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Github Username\"\r\n                  name=\"githubusername\"\r\n                  value={this.state.githubusername}\r\n                  onChange={this.onChange}\r\n                  error={errors.githubusername}\r\n                  info=\"If you want your latest repos and a Github link, include your username\"\r\n                />\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Short Bio\"\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  error={errors.bio}\r\n                  info=\"Tell us a little about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState((prevState) => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs,\r\n                      }));\r\n                    }}\r\n                    className=\"btn btn-light\"\r\n                  >\r\n                    Add Social Network Links\r\n                  </button>\r\n                  <span className=\"text-muted\">Optional</span>\r\n                </div>\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile })(\r\n  withRouter(CreateProfile)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport InputGroup from \"../common/InputGroup\";\r\nimport SelectListGroup from \"../common/SelectListGroup\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profileActions\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\n\r\nclass EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      handle: \"\",\r\n      company: \"\",\r\n      website: \"\",\r\n      location: \"\",\r\n      status: \"\",\r\n      skills: \"\",\r\n      githubusername: \"\",\r\n      bio: \"\",\r\n      twitter: \"\",\r\n      facebook: \"\",\r\n      linkedin: \"\",\r\n      youtube: \"\",\r\n      instagram: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (nextProps.profile.profile) {\r\n      const profile = nextProps.profile.profile;\r\n\r\n      // Bring skills array back to CSV\r\n      const skillsCSV = profile.skills.join(\",\");\r\n\r\n      // If profile field doesn't exist, make empty string\r\n      profile.company = !isEmpty(profile.company) ? profile.company : \"\";\r\n      profile.website = !isEmpty(profile.website) ? profile.website : \"\";\r\n      profile.location = !isEmpty(profile.location) ? profile.location : \"\";\r\n      profile.githubusername = !isEmpty(profile.githubusername)\r\n        ? profile.githubusername\r\n        : \"\";\r\n      profile.bio = !isEmpty(profile.bio) ? profile.bio : \"\";\r\n\r\n      profile.social = !isEmpty(profile.social) ? profile.social : {};\r\n\r\n      profile.twitter = !isEmpty(profile.social.twitter)\r\n        ? profile.social.twitter\r\n        : \"\";\r\n      profile.facebook = !isEmpty(profile.social.facebook)\r\n        ? profile.social.facebook\r\n        : \"\";\r\n      profile.linkedin = !isEmpty(profile.social.linkedin)\r\n        ? profile.social.linkedin\r\n        : \"\";\r\n      profile.youtube = !isEmpty(profile.social.youtube)\r\n        ? profile.social.youtube\r\n        : \"\";\r\n      profile.instagram = !isEmpty(profile.social.instagram)\r\n        ? profile.social.instagram\r\n        : \"\";\r\n\r\n      // Set component fields state\r\n      this.setState({\r\n        handle: profile.handle,\r\n        company: profile.company,\r\n        website: profile.website,\r\n        location: profile.location,\r\n        status: profile.status,\r\n        skills: skillsCSV,\r\n        githubusername: profile.githubusername,\r\n        bio: profile.bio,\r\n        twitter: profile.twitter,\r\n        facebook: profile.facebook,\r\n        linkedin: profile.linkedin,\r\n        youtube: profile.youtube,\r\n        instagram: profile.instagram,\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      handle: this.state.handle,\r\n      company: this.state.company,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n      status: this.state.status,\r\n      skills: this.state.skills,\r\n      githubusername: this.state.githubusername,\r\n      bio: this.state.bio,\r\n      twitter: this.state.twitter,\r\n      facebook: this.state.facebook,\r\n      linkedin: this.state.linkedin,\r\n      youtube: this.state.youtube,\r\n      instagram: this.state.instagram,\r\n    };\r\n\r\n    this.props.createProfile(profileData, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter Profile URL\"\r\n            name=\"twitter\"\r\n            icon=\"fab fa-twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            error={errors.twitter}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Facebook Page URL\"\r\n            name=\"facebook\"\r\n            icon=\"fab fa-facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            error={errors.facebook}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"LinkedIn Profile URL\"\r\n            name=\"linkedin\"\r\n            icon=\"fab fa-linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            error={errors.linkedin}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Youtube Channel URL\"\r\n            name=\"youtube\"\r\n            icon=\"fab fa-youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            error={errors.youtube}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Instagram Page URL\"\r\n            name=\"instagram\"\r\n            icon=\"fab fa-instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            error={errors.instagram}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Select options for status\r\n    const options = [\r\n      { label: \"* Select Professional Status\", value: 0 },\r\n      { label: \"Developer\", value: \"Developer\" },\r\n      { label: \"Junior Developer\", value: \"Junior Developer\" },\r\n      { label: \"Senior Developer\", value: \"Senior Developer\" },\r\n      { label: \"Manager\", value: \"Manager\" },\r\n      { label: \"Student or Learning\", value: \"Student or Learning\" },\r\n      { label: \"Instructor or Teacher\", value: \"Instructor or Teacher\" },\r\n      { label: \"Intern\", value: \"Intern\" },\r\n      { label: \"Other\", value: \"Other\" },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"create-profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Edit Profile</h1>\r\n              <small className=\"d-block pb-3\">* = required fields</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Profile Handle\"\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  error={errors.handle}\r\n                  info=\"A unique handle for your profile URL. Your fullname, company name, nickname\"\r\n                />\r\n                <SelectListGroup\r\n                  placeholder=\"Status\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onChange}\r\n                  options={options}\r\n                  error={errors.status}\r\n                  info=\"Give us an idea of where you are at in your career\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                  info=\"Could be your own company or one you work for\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Website\"\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  error={errors.website}\r\n                  info=\"Could be your own website or a company one\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                  info=\"City or city & state suggested (eg. Bangalore, KA)\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Skills\"\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  error={errors.skills}\r\n                  info=\"Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Github Username\"\r\n                  name=\"githubusername\"\r\n                  value={this.state.githubusername}\r\n                  onChange={this.onChange}\r\n                  error={errors.githubusername}\r\n                  info=\"If you want your latest repos and a Github link, include your username\"\r\n                />\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Short Bio\"\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  error={errors.bio}\r\n                  info=\"Tell us a little about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState((prevState) => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs,\r\n                      }));\r\n                    }}\r\n                    className=\"btn btn-light\"\r\n                  >\r\n                    Add Social Network Links\r\n                  </button>\r\n                  <span className=\"text-muted\">Optional</span>\r\n                </div>\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addExperience } from \"../../actions/profileActions\";\r\n\r\nclass AddExperience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      company: \"\",\r\n      title: \"\",\r\n      location: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n      current: false,\r\n      description: \"\",\r\n      errors: {},\r\n      disabled: false,\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onCheck = this.onCheck.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const expData = {\r\n      company: this.state.company,\r\n      title: this.state.title,\r\n      location: this.state.location,\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      current: this.state.current,\r\n      description: this.state.description,\r\n    };\r\n\r\n    this.props.addExperience(expData, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onCheck(e) {\r\n    this.setState({\r\n      disabled: !this.state.disabled,\r\n      current: !this.state.current,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-experience\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Add Experience</h1>\r\n              <p className=\"lead text-center\">\r\n                Add any job or position that you have had in the past or current\r\n              </p>\r\n              <small className=\"d-block pb-3\">* = required fields</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Job Title\"\r\n                  name=\"title\"\r\n                  value={this.state.title}\r\n                  onChange={this.onChange}\r\n                  error={errors.title}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                />\r\n                <h6>From Date</h6>\r\n                <TextFieldGroup\r\n                  name=\"from\"\r\n                  type=\"date\"\r\n                  value={this.state.from}\r\n                  onChange={this.onChange}\r\n                  error={errors.from}\r\n                />\r\n                <h6>To Date</h6>\r\n                <TextFieldGroup\r\n                  name=\"to\"\r\n                  type=\"date\"\r\n                  value={this.state.to}\r\n                  onChange={this.onChange}\r\n                  error={errors.to}\r\n                  disabled={this.state.disabled ? \"disabled\" : \"\"}\r\n                />\r\n                <div className=\"form-check mb-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"current\"\r\n                    value={this.state.current}\r\n                    checked={this.state.current}\r\n                    onChange={this.onCheck}\r\n                    id=\"current\"\r\n                  />\r\n                  <label htmlFor=\"current\" className=\"form-check-label\">\r\n                    Current Job\r\n                  </label>\r\n                </div>\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Job Description\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.onChange}\r\n                  error={errors.description}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addExperience })(\r\n  withRouter(AddExperience)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addEducation } from \"../../actions/profileActions\";\r\n\r\nclass AddEducation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      school: \"\",\r\n      degree: \"\",\r\n      fieldofstudy: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n      current: false,\r\n      description: \"\",\r\n      errors: {},\r\n      disabled: false,\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onCheck = this.onCheck.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const eduData = {\r\n      school: this.state.school,\r\n      degree: this.state.degree,\r\n      fieldofstudy: this.state.fieldofstudy,\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      current: this.state.current,\r\n      description: this.state.description,\r\n    };\r\n\r\n    this.props.addEducation(eduData, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onCheck(e) {\r\n    this.setState({\r\n      disabled: !this.state.disabled,\r\n      current: !this.state.current,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-education\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Add Education</h1>\r\n              <p className=\"lead text-center\">\r\n                Add any school, bootcamp, etc that you have attended\r\n              </p>\r\n              <small className=\"d-block pb-3\">* = required fields</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* School\"\r\n                  name=\"school\"\r\n                  value={this.state.school}\r\n                  onChange={this.onChange}\r\n                  error={errors.school}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Degree or Certification\"\r\n                  name=\"degree\"\r\n                  value={this.state.degree}\r\n                  onChange={this.onChange}\r\n                  error={errors.degree}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Field of Study\"\r\n                  name=\"fieldofstudy\"\r\n                  value={this.state.fieldofstudy}\r\n                  onChange={this.onChange}\r\n                  error={errors.fieldofstudy}\r\n                />\r\n                <h6>From Date</h6>\r\n                <TextFieldGroup\r\n                  name=\"from\"\r\n                  type=\"date\"\r\n                  value={this.state.from}\r\n                  onChange={this.onChange}\r\n                  error={errors.from}\r\n                />\r\n                <h6>To Date</h6>\r\n                <TextFieldGroup\r\n                  name=\"to\"\r\n                  type=\"date\"\r\n                  value={this.state.to}\r\n                  onChange={this.onChange}\r\n                  error={errors.to}\r\n                  disabled={this.state.disabled ? \"disabled\" : \"\"}\r\n                />\r\n                <div className=\"form-check mb-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"current\"\r\n                    value={this.state.current}\r\n                    checked={this.state.current}\r\n                    onChange={this.onCheck}\r\n                    id=\"current\"\r\n                  />\r\n                  <label htmlFor=\"current\" className=\"form-check-label\">\r\n                    Current Job\r\n                  </label>\r\n                </div>\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Program Description\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.onChange}\r\n                  error={errors.description}\r\n                  info=\"Tell us about the program that you were in\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addEducation })(\r\n  withRouter(AddEducation)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\n\r\nclass ProfileItem extends Component {\r\n  render() {\r\n    const { profile } = this.props;\r\n\r\n    return (\r\n      <div className=\"card card-body bg-light mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <img src={profile.user.avatar} alt=\"\" className=\"rounded-circle\" />\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-4 col-8\">\r\n            <h3>{profile.user.name}</h3>\r\n            <p>\r\n              {profile.status}{\" \"}\r\n              {isEmpty(profile.company) ? null : (\r\n                <span> at {profile.company}</span>\r\n              )}\r\n            </p>\r\n            <p>\r\n              {isEmpty(profile.location) ? null : (\r\n                <span>{profile.location}</span>\r\n              )}\r\n            </p>\r\n            <Link to={`/profile/${profile.handle}`} className=\"btn btn-info\">\r\n              View Profile\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-md-4 d-none d-md-block\">\r\n            <h4>Skill Set</h4>\r\n            <ul className=\"list-group\">\r\n              {profile.skills.slice(0, 4).map((skill, index) => (\r\n                <li key={index} className=\"list-group-item\">\r\n                  <i className=\"fa fa-check pr-1\" />\r\n                  {skill}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profileActions\";\r\n\r\nclass Profiles extends Component {\r\n  componentDidMount() {\r\n    this.props.getProfiles();\r\n  }\r\n\r\n  render() {\r\n    const { profiles, loading } = this.props.profile;\r\n    let profileItems;\r\n\r\n    if (profiles === null || loading) {\r\n      profileItems = <Spinner />;\r\n    } else {\r\n      if (profiles.length > 0) {\r\n        profileItems = profiles.map((profile) => (\r\n          <ProfileItem key={profile._id} profile={profile} />\r\n        ));\r\n      } else {\r\n        profileItems = <h4>No Profiles found...</h4>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"profiles\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Developer Profiles</h1>\r\n              <p className=\"lead text-center\">\r\n                Browse and connect with developers\r\n              </p>\r\n              {profileItems}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React, { Component } from \"react\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\n\r\nclass ProfileHeader extends Component {\r\n  render() {\r\n    const { profile } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-body bg-info text-white mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-4 col-md-3 m-auto\">\r\n                <img\r\n                  className=\"rounded-circle\"\r\n                  src={profile.user.avatar}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <h1 className=\"display-4 text-center\">{profile.user.name}</h1>\r\n              <p className=\"lead text-center\">\r\n                {profile.status}{\" \"}\r\n                {isEmpty(profile.company) ? null : (\r\n                  <span>at {profile.company}</span>\r\n                )}\r\n              </p>\r\n              {isEmpty(profile.location) ? null : (\r\n                <p>\r\n                  <span>{profile.location}</span>\r\n                </p>\r\n              )}\r\n              <p>\r\n                {isEmpty(profile.website) ? null : (\r\n                  <a\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-white p-2\"\r\n                    href={profile.website}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fas fa-globe fa-2x\" />\r\n                  </a>\r\n                )}\r\n\r\n                {isEmpty(profile.social && profile.social.twitter) ? null : (\r\n                  <a\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-white p-2\"\r\n                    href={profile.social.twitter}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fab fa-twitter fa-2x\" />\r\n                  </a>\r\n                )}\r\n\r\n                {isEmpty(profile.social && profile.social.facebook) ? null : (\r\n                  <a\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-white p-2\"\r\n                    href={profile.social.facebook}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fab fa-facebook fa-2x\" />\r\n                  </a>\r\n                )}\r\n\r\n                {isEmpty(profile.social && profile.social.linkedin) ? null : (\r\n                  <a\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-white p-2\"\r\n                    href={profile.social.linkedin}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fab fa-linkedin fa-2x\" />\r\n                  </a>\r\n                )}\r\n\r\n                {isEmpty(profile.social && profile.social.youtube) ? null : (\r\n                  <a\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-white p-2\"\r\n                    href={profile.social.youtube}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fab fa-youtube fa-2x\" />\r\n                  </a>\r\n                )}\r\n\r\n                {isEmpty(profile.social && profile.social.instagram) ? null : (\r\n                  <a\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-white p-2\"\r\n                    href={profile.social.instagram}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <i className=\"fab fa-instagram fa-2x\" />\r\n                  </a>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileHeader;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\n\r\nclass ProfileAbout extends Component {\r\n  render() {\r\n    const { profile } = this.props;\r\n\r\n    // Get first name\r\n    const firstName = profile.user.name.trim().split(\" \")[0];\r\n\r\n    // Skill list\r\n    const skills = profile.skills.map((skill, index) => (\r\n      <div key={index} className=\"p-3\">\r\n        <i className=\"fa fa-check\" /> {skill}\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-body bg-light mb-3\">\r\n            <h3 className=\"text-center text-info\">{firstName}'s Bio</h3>\r\n            <p className=\"lead\">\r\n              {isEmpty(profile.bio) ? (\r\n                <span>{firstName} does not have a bio</span>\r\n              ) : (\r\n                <span>{profile.bio}</span>\r\n              )}\r\n            </p>\r\n            <hr />\r\n            <h3 className=\"text-center text-info\">Skill Set</h3>\r\n            <div className=\"row\">\r\n              <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\r\n                {skills}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React, { Component } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass ProfileCreds extends Component {\r\n  render() {\r\n    const { experience, education } = this.props;\r\n\r\n    const expItems = experience.map((exp) => (\r\n      <li key={exp._id} className=\"list-group-item\">\r\n        <h4>{exp.company}</h4>\r\n        <p>\r\n          <Moment format=\"DD-MM-YYYY\">{exp.from}</Moment> -\r\n          {exp.to === null ? (\r\n            \" Now\"\r\n          ) : (\r\n            <Moment format=\"DD-MM-YYYY\">{exp.to}</Moment>\r\n          )}\r\n        </p>\r\n        <p>\r\n          <strong>Position:</strong> {exp.title}\r\n        </p>\r\n        <p>\r\n          {exp.location === \"\" ? null : (\r\n            <span>\r\n              <strong>Location: </strong> {exp.location}\r\n            </span>\r\n          )}\r\n        </p>\r\n        <p>\r\n          {exp.description === \"\" ? null : (\r\n            <span>\r\n              <strong>Description: </strong> {exp.description}\r\n            </span>\r\n          )}\r\n        </p>\r\n      </li>\r\n    ));\r\n\r\n    const eduItems = education.map((edu) => (\r\n      <li key={edu._id} className=\"list-group-item\">\r\n        <h4>{edu.school}</h4>\r\n        <p>\r\n          <Moment format=\"DD-MM-YYYY\">{edu.from}</Moment> -\r\n          {edu.to === null ? (\r\n            \" Now\"\r\n          ) : (\r\n            <Moment format=\"DD-MM-YYYY\">{edu.to}</Moment>\r\n          )}\r\n        </p>\r\n        <p>\r\n          <strong>Degree:</strong> {edu.degree}\r\n        </p>\r\n        <p>\r\n          <strong>Field Of Study: </strong> {edu.fieldofstudy}\r\n        </p>\r\n        <p>\r\n          {edu.description === \"\" ? null : (\r\n            <span>\r\n              <strong>Description: </strong> {edu.description}\r\n            </span>\r\n          )}\r\n        </p>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <h3 className=\"text-center text-info\">Experience</h3>\r\n          {expItems.length > 0 ? (\r\n            <ul className=\"list-group\">{expItems}</ul>\r\n          ) : (\r\n            <p className=\"text-center\">No Experience Listed</p>\r\n          )}\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h3 className=\"text-center text-info\">Education</h3>\r\n          {eduItems.length > 0 ? (\r\n            <ul className=\"list-group\">{eduItems}</ul>\r\n          ) : (\r\n            <p className=\"text-center\">No Education Listed</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileCreds;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ProfileGithub extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clientId: \"a8ea47a03c2f40af4878\",\r\n      clientSecret: \"8dfc38303d0962deca9e3359cca9616445fd7859\",\r\n      count: 5,\r\n      sort: \"created: asc\",\r\n      repos: [],\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { username } = this.props;\r\n    const { count, sort, clientId, clientSecret } = this.state;\r\n\r\n    fetch(\r\n      `https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (this.myRef) {\r\n          this.setState({ repos: data });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { repos } = this.state;\r\n\r\n    const repoItems = repos.map((repo) => (\r\n      <div key={repo.id} className=\"card card-body mb-2\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h4>\r\n              <Link to={repo.html_url} className=\"text-info\" target=\"_blank\">\r\n                {repo.name}\r\n              </Link>\r\n            </h4>\r\n            <p>{repo.description}</p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <span className=\"badge badge-info mr-1\">\r\n              Stars: {repo.stargazers_count}\r\n            </span>\r\n            <span className=\"badge badge-secondary mr-1\">\r\n              Watchers: {repo.watchers_count}\r\n            </span>\r\n            <span className=\"badge badge-success\">\r\n              Forks: {repo.forks_count}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div ref={this.myRef}>\r\n        <hr />\r\n        <h3 className=\"mb-4\">Lastest Github Repos</h3>\r\n        {repoItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProfileGithub;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileCreds from \"./ProfileCreds\";\r\nimport ProfileGithub from \"./ProfileGithub\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { getProfileByHandle } from \"../../actions/profileActions\";\r\n\r\nclass Profile extends Component {\r\n  componentDidMount() {\r\n    if (this.props.match.params.handle) {\r\n      this.props.getProfileByHandle(this.props.match.params.handle);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.profile.profile === null && this.props.profile.loading) {\r\n      this.props.history.push(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { profile, loading } = this.props.profile;\r\n\r\n    let profileContent;\r\n\r\n    if (profile === null || loading) {\r\n      profileContent = <Spinner />;\r\n    } else {\r\n      profileContent = (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Link to=\"/profiles\" className=\"btn btn-light mb-3 float-left\">\r\n                Back To Profiles\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6\" />\r\n          </div>\r\n          <ProfileHeader profile={profile} />\r\n          <ProfileAbout profile={profile} />\r\n          <ProfileCreds\r\n            education={profile.education}\r\n            experience={profile.experience}\r\n          />\r\n          {profile.githubusername ? (\r\n            <ProfileGithub username={profile.githubusername} />\r\n          ) : null}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">{profileContent}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  getProfileByHandle: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileByHandle })(Profile);\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  GET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_LOADING,\r\n} from \"./types\";\r\n\r\n// Add post\r\nexport const addPost = (postData) => (dispatch) => {\r\n  dispatch(clearErrors());\r\n  axios\r\n    .post(\"/api/post\", postData)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: ADD_POST,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Get posts\r\nexport const getPosts = () => (dispatch) => {\r\n  dispatch(setPostLoading());\r\n  axios\r\n    .get(\"/api/post\")\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: null,\r\n      })\r\n    );\r\n};\r\n\r\n// Get post\r\nexport const getPost = (id) => (dispatch) => {\r\n  dispatch(setPostLoading());\r\n  axios\r\n    .get(`/api/post/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: null,\r\n      })\r\n    );\r\n};\r\n\r\n// Delete Post\r\nexport const deletePost = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/post/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Add like\r\nexport const addLike = (id) => (dispatch) => {\r\n  axios\r\n    .post(`/api/post/like/${id}`)\r\n    .then((res) => dispatch(getPosts()))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (id) => (dispatch) => {\r\n  axios\r\n    .post(`/api/post/unlike/${id}`)\r\n    .then((res) => dispatch(getPosts()))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, commentData) => (dispatch) => {\r\n  dispatch(clearErrors());\r\n  axios\r\n    .post(`/api/post/comment/${postId}`, commentData)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/post/comment/${postId}/${commentId}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Set loading state\r\nexport const setPostLoading = () => {\r\n  return {\r\n    type: POST_LOADING,\r\n  };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport { addPost } from \"../../actions/postActions\";\r\n\r\nclass PostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({ errors: newProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { user } = this.props.auth;\r\n\r\n    const newPost = {\r\n      text: this.state.text,\r\n      name: user.name,\r\n      avatar: user.avatar,\r\n    };\r\n\r\n    this.props.addPost(newPost);\r\n    this.setState({ text: \"\" });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"post-form mb-3\">\r\n        <div className=\"card card-info\">\r\n          <div className=\"card-header bg-info text-white\">Say Somthing...</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Create a post\"\r\n                  name=\"text\"\r\n                  value={this.state.text}\r\n                  onChange={this.onChange}\r\n                  error={errors.text}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-dark\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPost })(PostForm);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, addLike, removeLike } from \"../../actions/postActions\";\r\n\r\nclass PostItem extends Component {\r\n  onDeleteClick(id) {\r\n    this.props.deletePost(id);\r\n  }\r\n\r\n  onLikeClick(id) {\r\n    this.props.addLike(id);\r\n  }\r\n\r\n  onUnlikeClick(id) {\r\n    this.props.removeLike(id);\r\n  }\r\n\r\n  findUserLike(likes) {\r\n    const { auth } = this.props;\r\n    if (likes.filter((like) => like.user === auth.user.id).length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { post, auth, showActions } = this.props;\r\n\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <a href=\"profile.html\">\r\n              <img\r\n                className=\"rounded-circle d-none d-md-block\"\r\n                src={post.avatar}\r\n                alt=\"\"\r\n              />\r\n            </a>\r\n            <br />\r\n            <p className=\"text-center\">{post.name}</p>\r\n          </div>\r\n          <div className=\"col-md-10\">\r\n            <p className=\"lead\">{post.text}</p>\r\n            {showActions ? (\r\n              <span>\r\n                <button\r\n                  onClick={this.onLikeClick.bind(this, post._id)}\r\n                  type=\"button\"\r\n                  className=\"btn btn-light mr-1\"\r\n                >\r\n                  <i\r\n                    className={classnames(\"fas fa-thumbs-up\", {\r\n                      \"text-info\": this.findUserLike(post.likes),\r\n                    })}\r\n                  ></i>\r\n                  <span className=\"badge badge-light\">{post.likes.length}</span>\r\n                </button>\r\n                <button\r\n                  onClick={this.onUnlikeClick.bind(this, post._id)}\r\n                  type=\"button\"\r\n                  className=\"btn btn-light mr-1\"\r\n                >\r\n                  <i className=\"text-secondary fas fa-thumbs-down\"></i>\r\n                </button>\r\n                <Link to={`/post/${post._id}`} className=\"btn btn-info mr-1\">\r\n                  Comments\r\n                </Link>\r\n                {post.user === auth.user.id ? (\r\n                  <button\r\n                    onClick={this.onDeleteClick.bind(this, post._id)}\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger mr-1\"\r\n                  >\r\n                    <i className=\"fas fa-times\" />\r\n                  </button>\r\n                ) : null}\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  deletePost: PropTypes.func.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deletePost, addLike, removeLike })(\r\n  PostItem\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nclass PostFeed extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n\r\n    return posts.map((post) => <PostItem key={post._id} post={post} />);\r\n  }\r\n}\r\n\r\nPostFeed.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PostFeed;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport PostForm from \"./PostForm\";\r\nimport PostFeed from \"./PostFeed\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { getPosts } from \"../../actions/postActions\";\r\n\r\nclass Posts extends Component {\r\n  componentDidMount() {\r\n    this.props.getPosts();\r\n  }\r\n\r\n  render() {\r\n    const { posts, loading } = this.props.post;\r\n    let postContent;\r\n\r\n    if (posts === null || loading) {\r\n      postContent = <Spinner />;\r\n    } else {\r\n      postContent = <PostFeed posts={posts} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"feed\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <PostForm />\r\n              {postContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  getPosts: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport { addComment } from \"../../actions/postActions\";\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({ errors: newProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { user } = this.props.auth;\r\n    const { postId } = this.props;\r\n\r\n    const newComment = {\r\n      text: this.state.text,\r\n      name: user.name,\r\n      avatar: user.avatar,\r\n    };\r\n\r\n    this.props.addComment(postId, newComment);\r\n    this.setState({ text: \"\" });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"post-form mb-3\">\r\n        <div className=\"card card-info\">\r\n          <div className=\"card-header bg-info text-white\">\r\n            Make a comment...\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Reply to post\"\r\n                  name=\"text\"\r\n                  value={this.state.text}\r\n                  onChange={this.onChange}\r\n                  error={errors.text}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-dark\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addComment })(CommentForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteComment } from \"../../actions/postActions\";\r\n\r\nclass CommentItem extends Component {\r\n  onDeleteClick(postId, commentId) {\r\n    this.props.deleteComment(postId, commentId);\r\n  }\r\n\r\n  render() {\r\n    const { comment, postId, auth } = this.props;\r\n\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <a href=\"profile.html\">\r\n              <img\r\n                className=\"rounded-circle d-none d-md-block\"\r\n                src={comment.avatar}\r\n                alt=\"\"\r\n              />\r\n            </a>\r\n            <br />\r\n            <p className=\"text-center\">{comment.name}</p>\r\n          </div>\r\n          <div className=\"col-md-10\">\r\n            <p className=\"lead\">{comment.text}</p>\r\n            {comment.user === auth.user.id ? (\r\n              <button\r\n                onClick={this.onDeleteClick.bind(this, postId, comment._id)}\r\n                type=\"button\"\r\n                className=\"btn btn-danger mr-1\"\r\n              >\r\n                <i className=\"fas fa-times\" />\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCommentItem.propTypes = {\r\n  deleteComment: PropTypes.func.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CommentItem from \"./CommentItem\";\r\n\r\nclass CommentFeed extends Component {\r\n  render() {\r\n    const { comments, postId } = this.props;\r\n    return comments.map((comment) => (\r\n      <CommentItem key={comment._id} comment={comment} postId={postId} />\r\n    ));\r\n  }\r\n}\r\n\r\nCommentFeed.propTypes = {\r\n  comments: PropTypes.array.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CommentFeed;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport CommentFeed from \"./CommentFeed\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { getPost } from \"../../actions/postActions\";\r\n\r\nclass Post extends Component {\r\n  componentDidMount() {\r\n    this.props.getPost(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { post, loading } = this.props.post;\r\n    let postContent;\r\n\r\n    if (post === null || loading || Object.keys(post).length === 0) {\r\n      postContent = <Spinner />;\r\n    } else {\r\n      postContent = (\r\n        <div>\r\n          <PostItem post={post} showActions={false} />\r\n          <CommentForm postId={post._id} />\r\n          <CommentFeed postId={post._id} comments={post.comments} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"post\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <Link to=\"/feed\" className=\"btn btn-light mb-3\">\r\n                Back To Feed\r\n              </Link>\r\n              {postContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">Page Not Found</h1>\r\n      <p>Sorry, this page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { clearProfile } from \"./actions/profileActions\";\n\nimport PrivateRoute from \"./components/common/PrivateRoute\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Footer from \"./components/layout/Footer\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport CreateProfile from \"./components/create-profile/CreateProfile\";\nimport EditProfile from \"./components/edit-profile/EditProfile\";\nimport AddExperience from \"./components/add-credentials/AddExperience\";\nimport AddEducation from \"./components/add-credentials/AddEducation\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/posts/Posts\";\nimport Post from \"./components/post/Post\";\nimport NotFound from \"./components/not-found/NotFound\";\n\nimport \"./App.css\";\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and expiration\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Clear current Profile\n    store.dispatch(clearProfile());\n    // Redirect to login\n    window.location.href = \"/login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile/:handle\" component={Profile} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/profiles\" component={Profiles} />\n            </Switch>\n            <Switch>\n              <PrivateRoute\n                exact\n                path=\"/create-profile\"\n                component={CreateProfile}\n              />\n            </Switch>\n            <Switch>\n              <PrivateRoute\n                exact\n                path=\"/edit-profile\"\n                component={EditProfile}\n              />\n            </Switch>\n            <Switch>\n              <PrivateRoute\n                exact\n                path=\"/add-experience\"\n                component={AddExperience}\n              />\n            </Switch>\n            <Switch>\n              <PrivateRoute\n                exact\n                path=\"/add-education\"\n                component={AddEducation}\n              />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/feed\" component={Posts} />\n            </Switch>\n            <Switch>\n              <PrivateRoute exact path=\"/post/:id\" component={Post} />\n            </Switch>\n            <Route exact path=\"/not-found\" component={NotFound} />\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}